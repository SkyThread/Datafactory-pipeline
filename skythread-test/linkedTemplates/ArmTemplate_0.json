{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "skythread-test"
		},
		"ADLSGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSGen2'"
		},
		"AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage'"
		},
		"AzureTableStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorage1'"
		},
		"linkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService'"
		},
		"skythreadtest1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'skythreadtest1'"
		},
		"skythreadtestcontainer1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'skythreadtestcontainer1'"
		},
		"ADLSGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testblobstoragecont.dfs.core.windows.net"
		},
		"skythreadtest1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://skythreaddstest.dfs.core.windows.net"
		},
		"skythreadtestcontainer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://skythreadtest.dfs.core.windows.net"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/0b028fc8-1762-44d8-9baa-e91ff8577ac3/resourceGroups/DefaultResourceGroup-CUS/providers/Microsoft.Storage/storageAccounts/skythreaddstest"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSGen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTableStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/skythreadtest1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('skythreadtest1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('skythreadtest1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/skythreadtestcontainer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('skythreadtestcontainer1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('skythreadtestcontainer1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureTableStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "testtable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureTableStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "String",
						"defaultValue": "*.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/File_read')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "demo.csv",
						"container": "datafactory-st"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "api-json-output"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/klmCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "klm"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_no",
						"type": "String"
					},
					{
						"name": "order_type    ",
						"type": "String"
					},
					{
						"name": "order_owner_company_code",
						"type": "String"
					},
					{
						"name": "assigned_company_code",
						"type": "String"
					},
					{
						"name": "creation_date",
						"type": "String"
					},
					{
						"name": "order_status",
						"type": "String"
					},
					{
						"name": "closure_date",
						"type": "String"
					},
					{
						"name": "aircraft_tail_no",
						"type": "String"
					},
					{
						"name": "warranty_requested",
						"type": "String"
					},
					{
						"name": "special_instructions",
						"type": "String"
					},
					{
						"name": "requested_work_scope",
						"type": "String"
					},
					{
						"name": "requested_airworthiness_tag",
						"type": "String"
					},
					{
						"name": "requested_condition ",
						"type": "String"
					},
					{
						"name": "priority",
						"type": "String"
					},
					{
						"name": "event_type",
						"type": "String"
					},
					{
						"name": "event_date",
						"type": "String"
					},
					{
						"name": "event_location",
						"type": "String"
					},
					{
						"name": "part_occurrence_status",
						"type": "String"
					},
					{
						"name": "event_reason",
						"type": "String"
					},
					{
						"name": "customer_purchase_order_no",
						"type": "String"
					},
					{
						"name": "customer_purchase_order_line_item_no",
						"type": "String"
					},
					{
						"name": "request_by_date",
						"type": "String"
					},
					{
						"name": "supplier_code",
						"type": "String"
					},
					{
						"name": "customer_code",
						"type": "String"
					},
					{
						"name": "part_no",
						"type": "String"
					},
					{
						"name": "serial_no ",
						"type": "String"
					},
					{
						"name": "part_mod_stack",
						"type": "String"
					},
					{
						"name": "condition",
						"type": "String"
					},
					{
						"name": "airworthiness_tag_type",
						"type": "String"
					},
					{
						"name": "airworthiness_tag_date",
						"type": "String"
					},
					{
						"name": "warranty_terms",
						"type": "String"
					},
					{
						"name": "supplier_code_birth",
						"type": "String"
					},
					{
						"name": "manuf_type ",
						"type": "String"
					},
					{
						"name": "birth_date",
						"type": "String"
					},
					{
						"name": "birth_location",
						"type": "String"
					},
					{
						"name": "commit_order_quantity",
						"type": "String"
					},
					{
						"name": "order_quantity",
						"type": "String"
					},
					{
						"name": "unit_measure_code",
						"type": "String"
					},
					{
						"name": "shipping_date",
						"type": "String"
					},
					{
						"name": "ship_to_code",
						"type": "String"
					},
					{
						"name": "specified_shipping_method_code",
						"type": "String"
					},
					{
						"name": "commit_delivery_date",
						"type": "String"
					},
					{
						"name": "priority_code",
						"type": "String"
					},
					{
						"name": "awb_no        ",
						"type": "String"
					},
					{
						"name": "po_line_item_status",
						"type": "String"
					},
					{
						"name": "purchase_order_status",
						"type": "String"
					},
					{
						"name": "StatusCode",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "Parker"
						},
						{
							"dataset": {
								"referenceName": "klmCSV",
								"type": "DatasetReference"
							},
							"name": "KLM"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string,",
						"          Column_8 as string,",
						"          Column_9 as string,",
						"          Column_10 as string,",
						"          Column_11 as string,",
						"          Column_12 as string,",
						"          Column_13 as string,",
						"          Column_14 as string,",
						"          Column_15 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: ['/input','Archieved']) ~> Parker",
						"source(output(",
						"          order_no as string,",
						"          {order_type    } as string,",
						"          order_owner_company_code as string,",
						"          assigned_company_code as string,",
						"          creation_date as string,",
						"          order_status as string,",
						"          closure_date as string,",
						"          aircraft_tail_no as string,",
						"          warranty_requested as string,",
						"          special_instructions as string,",
						"          requested_work_scope as string,",
						"          requested_airworthiness_tag as string,",
						"          {requested_condition } as string,",
						"          priority as string,",
						"          event_type as string,",
						"          event_date as string,",
						"          event_location as string,",
						"          part_occurrence_status as string,",
						"          event_reason as string,",
						"          customer_purchase_order_no as string,",
						"          customer_purchase_order_line_item_no as string,",
						"          request_by_date as string,",
						"          supplier_code as string,",
						"          customer_code as string,",
						"          part_no as string,",
						"          {serial_no } as string,",
						"          part_mod_stack as string,",
						"          condition as string,",
						"          airworthiness_tag_type as string,",
						"          airworthiness_tag_date as string,",
						"          warranty_terms as string,",
						"          supplier_code_birth as string,",
						"          {manuf_type } as string,",
						"          birth_date as string,",
						"          birth_location as string,",
						"          commit_order_quantity as string,",
						"          order_quantity as string,",
						"          unit_measure_code as string,",
						"          shipping_date as string,",
						"          ship_to_code as string,",
						"          specified_shipping_method_code as string,",
						"          commit_delivery_date as string,",
						"          priority_code as string,",
						"          {awb_no        } as string,",
						"          po_line_item_status as string,",
						"          purchase_order_status as string,",
						"          StatusCode as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: ['','Archieved']) ~> KLM",
						"Parker sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['parker_json'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     partitionBy('hash', 1)) ~> sink1",
						"KLM sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['klm_data_json'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 2,",
						"     mapColumn(",
						"          EventType = event_type,",
						"          OrderNo = order_no",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/klmCSV')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "FileName",
								"value": "*.csv"
							}
						],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Parker": {},
									"KLM": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-12T12:15:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/scheduled_trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 3,
						"startTime": "2022-04-17T13:02:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/test/blobs/",
					"ignoreEmptyBlobs": false,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		}
	]
}